#!/bin/bash
#
# Post-Merge Git Hook
# Automatically runs after 'git pull' or 'git merge'
#
# This hook rebuilds the sync service automatically to ensure
# the remote server has the latest compiled code after pulling updates.
#

echo ""
echo "============================================================"
echo "üîÑ POST-MERGE HOOK: Rebuilding sync service..."
echo "============================================================"
echo ""

# Check if package.json was updated (dependencies might have changed)
if git diff-tree -r --name-only --no-commit-id ORIG_HEAD HEAD | grep --quiet "package.json"; then
  echo "üì¶ package.json changed - running full setup..."
  npm run setup:update
else
  # Only rebuild the service if source files changed
  if git diff-tree -r --name-only --no-commit-id ORIG_HEAD HEAD | grep --quiet "src/"; then
    echo "üîß Source files changed - rebuilding service..."

    # Clean Prisma client to prevent EPERM errors (Windows file locks)
    echo "üßπ Cleaning Prisma client files..."
    rm -rf node_modules/.prisma/client 2>/dev/null || true
    rm -rf node_modules/@prisma/client 2>/dev/null || true

    # Regenerate Prisma client in case schema changed
    echo "üîÑ Regenerating Prisma client..."
    npx prisma generate || {
      echo "‚ö†Ô∏è  Prisma generation failed, retrying after cleanup..."
      sleep 2
      rm -rf node_modules/.prisma/client 2>/dev/null || true
      rm -rf node_modules/@prisma/client 2>/dev/null || true
      npx prisma generate
    }

    # Rebuild sync service
    npm run build:service

    echo ""
    echo "‚úÖ Sync service rebuilt successfully!"
    echo ""
    echo "‚ö†Ô∏è  REMINDER: If the service is running, restart it:"
    echo "   npm run service:restart (as Administrator)"
    echo ""
  else
    echo "‚ÑπÔ∏è  No source files changed - skipping rebuild"
  fi
fi

echo "============================================================"
echo ""
