#!/bin/bash
#
# Post-Merge Git Hook (INTELLIGENT VERSION)
# Automatically runs after 'git pull' or 'git merge'
#
# This hook intelligently detects what changed and runs the appropriate workflow:
# - Scripts, migrations, or package.json changed: Run full setup with DB detection
# - Only source files changed: Quick rebuild
# - Nothing significant changed: Skip
#

echo ""
echo "============================================================"
echo "üîÑ POST-MERGE HOOK: Analyzing changes..."
echo "============================================================"
echo ""

# Get list of changed files
CHANGED_FILES=$(git diff-tree -r --name-only --no-commit-id ORIG_HEAD HEAD)

# Check what types of files changed
PACKAGE_CHANGED=$(echo "$CHANGED_FILES" | grep --quiet "package.json" && echo "yes" || echo "no")
SCRIPTS_CHANGED=$(echo "$CHANGED_FILES" | grep --quiet "scripts/" && echo "yes" || echo "no")
MIGRATIONS_CHANGED=$(echo "$CHANGED_FILES" | grep --quiet "prisma/migrations/" && echo "yes" || echo "no")
SCHEMA_CHANGED=$(echo "$CHANGED_FILES" | grep --quiet "prisma/schema.prisma" && echo "yes" || echo "no")
SRC_CHANGED=$(echo "$CHANGED_FILES" | grep --quiet "src/" && echo "yes" || echo "no")

# Determine if we need full setup
NEEDS_FULL_SETUP="no"

if [ "$PACKAGE_CHANGED" = "yes" ]; then
  echo "üì¶ package.json changed"
  NEEDS_FULL_SETUP="yes"
fi

if [ "$SCRIPTS_CHANGED" = "yes" ]; then
  echo "üìú Setup scripts changed"
  NEEDS_FULL_SETUP="yes"
fi

if [ "$MIGRATIONS_CHANGED" = "yes" ]; then
  echo "üóÑÔ∏è  Database migrations changed"
  NEEDS_FULL_SETUP="yes"
fi

if [ "$SCHEMA_CHANGED" = "yes" ]; then
  echo "üìê Prisma schema changed"
  NEEDS_FULL_SETUP="yes"
fi

if [ "$SRC_CHANGED" = "yes" ]; then
  echo "üîß Source files changed"
fi

echo ""

# Run appropriate workflow
if [ "$NEEDS_FULL_SETUP" = "yes" ]; then
  echo "üöÄ Running full intelligent setup workflow..."
  npm run setup:update

elif [ "$SRC_CHANGED" = "yes" ]; then
  echo "üî® Running quick rebuild (source files only)..."

  # Clean Prisma client to prevent EPERM errors (Windows file locks)
  echo "üßπ Cleaning Prisma client files..."
  rm -rf node_modules/.prisma/client 2>/dev/null || true
  rm -rf node_modules/@prisma/client 2>/dev/null || true

  # Regenerate Prisma client in case schema changed
  echo "üîÑ Regenerating Prisma client..."
  npx prisma generate || {
    echo "‚ö†Ô∏è  Prisma generation failed, retrying after cleanup..."
    sleep 2
    rm -rf node_modules/.prisma/client 2>/dev/null || true
    rm -rf node_modules/@prisma/client 2>/dev/null || true
    npx prisma generate
  }

  # Rebuild sync service
  npm run build:service

  echo ""
  echo "‚úÖ Sync service rebuilt successfully!"
  echo ""
  echo "‚ö†Ô∏è  REMINDER: If the service is running, restart it:"
  echo "   npm run service:restart (as Administrator)"
  echo ""

else
  echo "‚ÑπÔ∏è  No significant changes detected - skipping rebuild"
  echo "üí° To manually run setup: npm run setup:update"
fi

echo "============================================================"
echo ""
