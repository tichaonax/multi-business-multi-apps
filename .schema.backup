{
  "content": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Accounts {\n  id                String  @id\n  userId            String\n  type              String\n  provider          String\n  providerAccountId String\n  refreshToken      String?\n  accessToken       String?\n  expiresAt         Int?\n  tokenType         String?\n  scope             String?\n  idToken           String?\n  sessionState      String?\n  users             Users   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n  @@map(\"accounts\")\n}\n\nmodel AuditLogs {\n  id         String   @id\n  userId     String\n  action     String\n  entityType String\n  entityId   String\n  timestamp  DateTime @default(now())\n  oldValues  Json?\n  newValues  Json?\n  metadata   Json?\n  tableName  String?\n  recordId   String?\n  changes    Json?\n  details    Json?\n  users      Users    @relation(fields: [userId], references: [id], onDelete: SetNull)\n\n  @@map(\"audit_logs\")\n}\n\nmodel BenefitTypes {\n  id                     String                 @id\n  name                   String                 @unique\n  description            String?\n  type                   String\n  createdAt              DateTime               @default(now())\n  defaultAmount          Decimal?               @db.Decimal(12, 2)\n  isActive               Boolean                @default(true)\n  isPercentage           Boolean                @default(false)\n  updatedAt              DateTime               @default(now())\n  contract_benefits      ContractBenefits[]\n  employee_benefits      EmployeeBenefits[]\n  payroll_entry_benefits PayrollEntryBenefits[]\n\n  @@map(\"benefit_types\")\n}\n\nmodel BusinessAccounts {\n  id         String     @id\n  businessId String     @unique\n  balance    Decimal    @default(0) @db.Decimal(12, 2)\n  createdAt  DateTime   @default(now())\n  updatedAt  DateTime\n  createdBy  String?\n  businesses Businesses @relation(fields: [businessId], references: [id], onDelete: Cascade)\n  users      Users?     @relation(fields: [createdBy], references: [id])\n\n  @@map(\"business_accounts\")\n}\n\nmodel BusinessBrands {\n  id                String             @id\n  businessId        String\n  name              String\n  description       String?\n  logoUrl           String?\n  website           String?\n  isActive          Boolean            @default(true)\n  businessType      String\n  attributes        Json?\n  createdAt         DateTime           @default(now())\n  updatedAt         DateTime\n  businesses        Businesses         @relation(fields: [businessId], references: [id])\n  business_products BusinessProducts[]\n\n  @@unique([businessId, name])\n  @@map(\"business_brands\")\n}\n\nmodel BusinessCategories {\n  id                        String               @id\n  businessId                String\n  name                      String\n  description               String?\n  parentId                  String?\n  displayOrder              Int                  @default(0)\n  isActive                  Boolean              @default(true)\n  businessType              String\n  attributes                Json?\n  createdAt                 DateTime             @default(now())\n  updatedAt                 DateTime\n  businesses                Businesses           @relation(fields: [businessId], references: [id])\n  business_categories       BusinessCategories?  @relation(\"business_categoriesTobusiness_categories\", fields: [parentId], references: [id])\n  other_business_categories BusinessCategories[] @relation(\"business_categoriesTobusiness_categories\")\n  business_products         BusinessProducts[]\n\n  @@unique([businessId, name])\n  @@map(\"business_categories\")\n}\n\nmodel BusinessCustomers {\n  id              String           @id\n  businessId      String\n  customerNumber  String\n  name            String\n  email           String?\n  phone           String?\n  dateOfBirth     DateTime?\n  address         String?\n  city            String?\n  country         String?\n  customerType    CustomerType     @default(INDIVIDUAL)\n  segment         String?\n  loyaltyPoints   Int              @default(0)\n  totalSpent      Decimal          @default(0) @db.Decimal(12, 2)\n  isActive        Boolean          @default(true)\n  businessType    String\n  attributes      Json?\n  createdAt       DateTime         @default(now())\n  updatedAt       DateTime\n  businesses      Businesses       @relation(fields: [businessId], references: [id])\n  business_orders BusinessOrders[]\n\n  @@unique([businessId, customerNumber])\n  @@map(\"business_customers\")\n}\n\nmodel BusinessMemberships {\n  id                   String               @id\n  userId               String\n  businessId           String\n  role                 String               @default(\"employee\")\n  permissions          Json                 @default(\"{}\")\n  isActive             Boolean              @default(true)\n  invitedBy            String?\n  joinedAt             DateTime             @default(now())\n  lastAccessedAt       DateTime?\n  templateId           String?\n  businesses           Businesses           @relation(fields: [businessId], references: [id], onDelete: Cascade)\n  permission_templates PermissionTemplates? @relation(fields: [templateId], references: [id])\n  users                Users                @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, businessId])\n  @@map(\"business_memberships\")\n}\n\nmodel BusinessOrderItems {\n  id               String          @id\n  orderId          String\n  productVariantId String\n  quantity         Int\n  unitPrice        Decimal         @db.Decimal(10, 2)\n  discountAmount   Decimal         @default(0) @db.Decimal(10, 2)\n  totalPrice       Decimal         @db.Decimal(10, 2)\n  attributes       Json?\n  createdAt        DateTime        @default(now())\n  business_orders  BusinessOrders  @relation(fields: [orderId], references: [id])\n  product_variants ProductVariants @relation(fields: [productVariantId], references: [id])\n\n  @@map(\"business_order_items\")\n}\n\nmodel BusinessOrders {\n  id                   String               @id\n  businessId           String\n  orderNumber          String\n  customerId           String?\n  employeeId           String?\n  orderType            OrderType            @default(SALE)\n  status               OrderStatus          @default(PENDING)\n  subtotal             Decimal              @db.Decimal(10, 2)\n  taxAmount            Decimal              @db.Decimal(10, 2)\n  discountAmount       Decimal              @default(0) @db.Decimal(10, 2)\n  totalAmount          Decimal              @db.Decimal(10, 2)\n  paymentMethod        PaymentMethod?\n  paymentStatus        PaymentStatus        @default(PENDING)\n  businessType         String\n  attributes           Json?\n  notes                String?\n  processedAt          DateTime?\n  createdAt            DateTime             @default(now())\n  updatedAt            DateTime\n  business_order_items BusinessOrderItems[]\n  businesses           Businesses           @relation(fields: [businessId], references: [id])\n  business_customers   BusinessCustomers?   @relation(fields: [customerId], references: [id])\n  employees            Employees?           @relation(fields: [employeeId], references: [id])\n\n  @@unique([businessId, orderNumber])\n  @@map(\"business_orders\")\n}\n\nmodel BusinessProducts {\n  id                       String                   @id\n  businessId               String\n  name                     String\n  description              String?\n  sku                      String?\n  barcode                  String?\n  brandId                  String?\n  categoryId               String\n  productType              ProductType              @default(PHYSICAL)\n  condition                ProductCondition         @default(NEW)\n  basePrice                Decimal                  @db.Decimal(10, 2)\n  costPrice                Decimal?                 @db.Decimal(10, 2)\n  isActive                 Boolean                  @default(true)\n  businessType             String\n  attributes               Json?\n  isAvailable              Boolean                  @default(true)\n  spiceLevel               Int?                     @default(0)\n  dietaryRestrictions      String[]\n  allergens                String[]\n  preparationTime          Int?                     @default(0)\n  calories                 Int?\n  isCombo                  Boolean                  @default(false)\n  comboItemsData           Json?\n  originalPrice            Decimal?                 @db.Decimal(10, 2)\n  discountPercent          Decimal?                 @db.Decimal(5, 2)\n  discountAmount           Decimal?                 @db.Decimal(10, 2)\n  promotionStartDate       DateTime?\n  promotionEndDate         DateTime?\n  promotionName            String?\n  createdAt                DateTime                 @default(now())\n  updatedAt                DateTime\n  business_brands          BusinessBrands?          @relation(fields: [brandId], references: [id])\n  businesses               Businesses               @relation(fields: [businessId], references: [id])\n  business_categories      BusinessCategories       @relation(fields: [categoryId], references: [id])\n  business_stock_movements BusinessStockMovements[]\n  menu_combo_items         MenuComboItems[]\n  product_attributes       ProductAttributes[]\n  product_images           ProductImages[]\n  product_variants         ProductVariants[]\n  supplier_products        SupplierProducts[]\n\n  @@unique([businessId, sku])\n  @@map(\"business_products\")\n}\n\nmodel BusinessStockMovements {\n  id                String            @id\n  businessId        String\n  productVariantId  String\n  movementType      StockMovementType\n  quantity          Int\n  unitCost          Decimal?          @db.Decimal(10, 2)\n  reference         String?\n  reason            String?\n  employeeId        String?\n  businessType      String\n  attributes        Json?\n  createdAt         DateTime          @default(now())\n  businessProductId String?\n  businesses        Businesses        @relation(fields: [businessId], references: [id])\n  business_products BusinessProducts? @relation(fields: [businessProductId], references: [id])\n  employees         Employees?        @relation(fields: [employeeId], references: [id])\n  product_variants  ProductVariants   @relation(fields: [productVariantId], references: [id])\n\n  @@map(\"business_stock_movements\")\n}\n\nmodel BusinessSuppliers {\n  id                String             @id\n  businessId        String\n  supplierNumber    String\n  name              String\n  contactPerson     String?\n  email             String?\n  phone             String?\n  address           String?\n  paymentTerms      String?\n  creditLimit       Decimal?           @db.Decimal(12, 2)\n  isActive          Boolean            @default(true)\n  businessType      String\n  attributes        Json?\n  createdAt         DateTime           @default(now())\n  updatedAt         DateTime\n  businesses        Businesses         @relation(fields: [businessId], references: [id])\n  supplier_products SupplierProducts[]\n\n  @@unique([businessId, supplierNumber])\n  @@map(\"business_suppliers\")\n}\n\nmodel BusinessTransactions {\n  id            String     @id\n  businessId    String\n  amount        Decimal    @db.Decimal(12, 2)\n  type          String\n  description   String\n  referenceId   String?\n  referenceType String?\n  balanceAfter  Decimal    @db.Decimal(12, 2)\n  createdAt     DateTime   @default(now())\n  createdBy     String\n  notes         String?\n  metadata      Json?\n  businesses    Businesses @relation(fields: [businessId], references: [id], onDelete: Cascade)\n  users         Users      @relation(fields: [createdBy], references: [id])\n\n  @@map(\"business_transactions\")\n}\n\nmodel Businesses {\n  id                                                                       String                        @id\n  name                                                                     String\n  type                                                                     String\n  description                                                              String?\n  isActive                                                                 Boolean                       @default(true)\n  settings                                                                 Json                          @default(\"{}\")\n  createdBy                                                                String?\n  createdAt                                                                DateTime                      @default(now())\n  updatedAt                                                                DateTime                      @default(now())\n  umbrellaBusinessId                                                       String?\n  isUmbrellaBusiness                                                       Boolean                       @default(false)\n  umbrellaBusinessName                                                     String?                       @default(\"Demo Umbrella Company\")\n  umbrellaBusinessAddress                                                  String?\n  umbrellaBusinessEmail                                                    String?\n  umbrellaBusinessPhone                                                    String?\n  umbrellaBusinessRegistration                                             String?\n  shortName                                                                String?\n  business_accounts                                                        BusinessAccounts?\n  business_brands                                                          BusinessBrands[]\n  business_categories                                                      BusinessCategories[]\n  business_customers                                                       BusinessCustomers[]\n  business_memberships                                                     BusinessMemberships[]\n  business_orders                                                          BusinessOrders[]\n  business_products                                                        BusinessProducts[]\n  business_stock_movements                                                 BusinessStockMovements[]\n  business_suppliers                                                       BusinessSuppliers[]\n  business_transactions                                                    BusinessTransactions[]\n  businesses                                                               Businesses?                   @relation(\"businessesTobusinesses\", fields: [umbrellaBusinessId], references: [id])\n  other_businesses                                                         Businesses[]                  @relation(\"businessesTobusinesses\")\n  employee_business_assignments                                            EmployeeBusinessAssignments[]\n  employee_contracts_employee_contracts_primaryBusinessIdTobusinesses      EmployeeContracts[]           @relation(\"employee_contracts_primaryBusinessIdTobusinesses\")\n  employee_contracts_employee_contracts_umbrellaBusinessIdTobusinesses     EmployeeContracts[]           @relation(\"employee_contracts_umbrellaBusinessIdTobusinesses\")\n  employees                                                                Employees[]\n  inter_business_loans_inter_business_loans_borrowerBusinessIdTobusinesses InterBusinessLoans[]          @relation(\"inter_business_loans_borrowerBusinessIdTobusinesses\")\n  inter_business_loans_inter_business_loans_lenderBusinessIdTobusinesses   InterBusinessLoans[]          @relation(\"inter_business_loans_lenderBusinessIdTobusinesses\")\n  menu_combos                                                              MenuCombos[]\n  menu_promotions                                                          MenuPromotions[]\n  payroll_exports                                                          PayrollExports[]\n  payroll_periods                                                          PayrollPeriods[]\n  projects                                                                 Projects[]\n  vehicle_expenses                                                         VehicleExpenses[]\n  vehicle_reimbursements                                                   VehicleReimbursements[]\n  vehicle_trips                                                            VehicleTrips[]\n  vehicles                                                                 Vehicles[]\n\n  @@map(\"businesses\")\n}\n\nmodel ChatMessages {\n  id         String     @id\n  message    String\n  createdAt  DateTime   @default(now())\n  roomId     String?\n  userId     String?\n  chat_rooms ChatRooms? @relation(fields: [roomId], references: [id], onDelete: Cascade)\n  users      Users?     @relation(fields: [userId], references: [id])\n\n  @@map(\"chat_messages\")\n}\n\nmodel ChatParticipants {\n  id         String     @id\n  joinedAt   DateTime   @default(now())\n  roomId     String?\n  userId     String?\n  chat_rooms ChatRooms? @relation(fields: [roomId], references: [id], onDelete: Cascade)\n  users      Users?     @relation(fields: [userId], references: [id])\n\n  @@map(\"chat_participants\")\n}\n\nmodel ChatRooms {\n  id                String             @id\n  name              String\n  type              String             @default(\"group\")\n  createdAt         DateTime           @default(now())\n  createdBy         String?\n  chat_messages     ChatMessages[]\n  chat_participants ChatParticipants[]\n  users             Users?             @relation(fields: [createdBy], references: [id])\n\n  @@map(\"chat_rooms\")\n}\n\nmodel CompensationTypes {\n  id                   String              @id\n  name                 String              @unique\n  type                 String\n  description          String?\n  baseAmount           Decimal?            @db.Decimal(12, 2)\n  commissionPercentage Decimal?            @db.Decimal(5, 2)\n  createdAt            DateTime            @default(now())\n  isActive             Boolean             @default(true)\n  updatedAt            DateTime            @default(now())\n  frequency            String?             @default(\"monthly\")\n  employee_contracts   EmployeeContracts[]\n  employees            Employees[]\n\n  @@map(\"compensation_types\")\n}\n\nmodel ConflictResolutions {\n  id                 String             @id\n  conflictType       ConflictType\n  resolutionStrategy ResolutionStrategy\n  sourceEventId      String\n  targetEventId      String?\n  resolvedData       Json\n  resolvedBy         String?\n  resolvedAt         DateTime           @default(now())\n  eventIds           String[]           @default([])\n  resolution         Json?\n  strategy           String?\n  metadata           Json?\n  createdAt          DateTime           @default(now())\n\n  @@map(\"conflict_resolutions\")\n}\n\nmodel ConstructionExpenses {\n  id                    String                @id\n  category              String\n  description           String\n  amount                Decimal               @db.Decimal(12, 2)\n  vendor                String?\n  createdAt             DateTime              @default(now())\n  createdBy             String?\n  projectId             String?\n  receiptUrl            String?\n  users                 Users?                @relation(fields: [createdBy], references: [id])\n  construction_projects ConstructionProjects? @relation(fields: [projectId], references: [id], onDelete: Cascade)\n\n  @@map(\"construction_expenses\")\n}\n\nmodel ConstructionProjects {\n  id                    String                 @id\n  name                  String\n  description           String?\n  status                String                 @default(\"active\")\n  budget                Decimal?               @db.Decimal(12, 2)\n  createdAt             DateTime               @default(now())\n  createdBy             String?\n  endDate               DateTime?\n  startDate             DateTime?\n  updatedAt             DateTime               @default(now())\n  businessType          String                 @default(\"construction\")\n  projectTypeId         String?\n  construction_expenses ConstructionExpenses[]\n  users                 Users?                 @relation(fields: [createdBy], references: [id])\n  project_types         ProjectTypes?          @relation(fields: [projectTypeId], references: [id])\n  project_contractors   ProjectContractors[]\n  project_stages        ProjectStages[]\n  project_transactions  ProjectTransactions[]\n\n  @@map(\"construction_projects\")\n}\n\nmodel ContractBenefits {\n  id                 String            @id\n  amount             Decimal           @db.Decimal(12, 2)\n  notes              String?\n  benefitTypeId      String\n  contractId         String\n  createdAt          DateTime          @default(now())\n  isPercentage       Boolean           @default(false)\n  benefit_types      BenefitTypes      @relation(fields: [benefitTypeId], references: [id])\n  employee_contracts EmployeeContracts @relation(fields: [contractId], references: [id], onDelete: Cascade)\n\n  @@map(\"contract_benefits\")\n}\n\nmodel ContractRenewals {\n  id                                                                          String             @id\n  status                                                                      String             @default(\"pending\")\n  notes                                                                       String?\n  autoRenewalMonths                                                           Int?\n  benefitChanges                                                              Json?\n  createdAt                                                                   DateTime           @default(now())\n  employeeId                                                                  String\n  isAutoRenewal                                                               Boolean            @default(false)\n  jobTitleChange                                                              String?\n  managerNotifiedAt                                                           DateTime?\n  newContractId                                                               String?\n  originalContractId                                                          String\n  processedAt                                                                 DateTime?\n  processedBy                                                                 String?\n  reminderSentAt                                                              DateTime?\n  renewalDueDate                                                              DateTime\n  salaryChange                                                                Decimal?           @db.Decimal(12, 2)\n  salaryChangeType                                                            String?\n  updatedAt                                                                   DateTime           @default(now())\n  employees                                                                   Employees          @relation(fields: [employeeId], references: [id], onDelete: Cascade)\n  employee_contracts_contract_renewals_newContractIdToemployee_contracts      EmployeeContracts? @relation(\"contract_renewals_newContractIdToemployee_contracts\", fields: [newContractId], references: [id])\n  employee_contracts_contract_renewals_originalContractIdToemployee_contracts EmployeeContracts  @relation(\"contract_renewals_originalContractIdToemployee_contracts\", fields: [originalContractId], references: [id])\n\n  @@map(\"contract_renewals\")\n}\n\nmodel DataSnapshots {\n  id                  String   @id\n  nodeId              String\n  tableName           String\n  recordId            String\n  snapshotData        Json\n  advanceBreakdown    Json?\n  advanceDeductions   Decimal  @default(0) @db.Decimal(12, 2)\n  deductionsBreakdown Json?\n  expectedWorkDays    Int?\n  hasAdjustments      Boolean?\n  isProRata           Boolean?\n  loanBreakdown       Json?\n  loanDeductions      Decimal  @default(0) @db.Decimal(12, 2)\n  proRataCalculation  Json?\n  proRataReason       String?\n  processedBy         String?\n  totalDeductions     Decimal  @default(0) @db.Decimal(12, 2)\n\n  @@map(\"data_snapshots\")\n}\n\nmodel DisciplinaryActions {\n  id                                                   String    @id\n  employeeId                                           String\n  actionType                                           String\n  violationType                                        String\n  title                                                String\n  description                                          String\n  incidentDate                                         DateTime\n  actionDate                                           DateTime\n  severity                                             String    @default(\"low\")\n  isActive                                             Boolean   @default(true)\n  improvementPlan                                      String?\n  followUpDate                                         DateTime?\n  followUpNotes                                        String?\n  createdBy                                            String\n  hrReviewed                                           Boolean   @default(false)\n  hrReviewedBy                                         String?\n  hrReviewedAt                                         DateTime?\n  hrNotes                                              String?\n  employeeAcknowledged                                 Boolean   @default(false)\n  employeeResponse                                     String?\n  employeeSignedAt                                     DateTime?\n  attachments                                          String[]\n  createdAt                                            DateTime  @default(now())\n  updatedAt                                            DateTime  @default(now())\n  employees_disciplinary_actions_createdByToemployees  Employees @relation(\"disciplinary_actions_createdByToemployees\", fields: [createdBy], references: [id], map: \"disciplinary_actions_created_by_fkey\")\n  employees_disciplinary_actions_employeeIdToemployees Employees @relation(\"disciplinary_actions_employeeIdToemployees\", fields: [employeeId], references: [id], onDelete: Cascade, map: \"disciplinary_actions_employee_id_fkey\")\n\n  @@map(\"disciplinary_actions\")\n}\n\nmodel DriverAuthorizations {\n  id                 String             @id\n  driverId           String\n  vehicleId          String\n  authorizedBy       String\n  authorizedDate     DateTime\n  expiryDate         DateTime?\n  isActive           Boolean            @default(true)\n  authorizationLevel AuthorizationLevel @default(BASIC)\n  notes              String?\n  createdAt          DateTime           @default(now())\n  updatedAt          DateTime\n  users              Users              @relation(fields: [authorizedBy], references: [id])\n  vehicle_drivers    VehicleDrivers     @relation(fields: [driverId], references: [id], onDelete: Cascade)\n  vehicles           Vehicles           @relation(fields: [vehicleId], references: [id], onDelete: Cascade)\n  vehicle_trips      VehicleTrips[]\n\n  @@unique([driverId, vehicleId])\n  @@map(\"driver_authorizations\")\n}\n\nmodel DriverLicenseTemplates {\n  id          String      @id\n  name        String\n  description String?\n  pattern     String\n  example     String\n  countryCode String?\n  createdAt   DateTime    @default(now())\n  isActive    Boolean     @default(true)\n  updatedAt   DateTime    @default(now())\n  employees   Employees[]\n  persons     Persons[]\n\n  @@map(\"driver_license_templates\")\n}\n\nmodel EmployeeAllowances {\n  id                                                  String     @id\n  employeeId                                          String\n  type                                                String\n  amount                                              Decimal    @db.Decimal(12, 2)\n  description                                         String?\n  payrollMonth                                        Int\n  payrollYear                                         Int\n  approvedBy                                          String?\n  approvedAt                                          DateTime?\n  createdAt                                           DateTime   @default(now())\n  employees_employee_allowances_approvedByToemployees Employees? @relation(\"employee_allowances_approvedByToemployees\", fields: [approvedBy], references: [id])\n  employees_employee_allowances_employeeIdToemployees Employees  @relation(\"employee_allowances_employeeIdToemployees\", fields: [employeeId], references: [id], onDelete: Cascade)\n\n  @@map(\"employee_allowances\")\n}\n\nmodel EmployeeAttendance {\n  id          String    @id\n  date        DateTime\n  status      String    @default(\"present\")\n  notes       String?\n  checkIn     DateTime?\n  checkOut    DateTime?\n  createdAt   DateTime  @default(now())\n  employeeId  String\n  hoursWorked Decimal?  @db.Decimal(4, 2)\n  employees   Employees @relation(fields: [employeeId], references: [id], onDelete: Cascade)\n\n  @@unique([employeeId, date])\n  @@map(\"employee_attendance\")\n}\n\nmodel EmployeeBenefits {\n  id            String       @id\n  amount        Decimal      @db.Decimal(12, 2)\n  notes         String?\n  benefitTypeId String\n  createdAt     DateTime     @default(now())\n  effectiveDate DateTime\n  employeeId    String\n  endDate       DateTime?\n  isActive      Boolean      @default(true)\n  isPercentage  Boolean      @default(false)\n  updatedAt     DateTime     @default(now())\n  benefit_types BenefitTypes @relation(fields: [benefitTypeId], references: [id])\n  employees     Employees    @relation(fields: [employeeId], references: [id], onDelete: Cascade)\n\n  @@map(\"employee_benefits\")\n}\n\nmodel EmployeeBonuses {\n  id                                               String     @id\n  amount                                           Decimal    @db.Decimal(12, 2)\n  approvedAt                                       DateTime?\n  approvedBy                                       String?\n  createdAt                                        DateTime   @default(now())\n  employeeId                                       String\n  reason                                           String?\n  type                                             String\n  employees_employee_bonuses_approvedByToemployees Employees? @relation(\"employee_bonuses_approvedByToemployees\", fields: [approvedBy], references: [id])\n  employees_employee_bonuses_employeeIdToemployees Employees  @relation(\"employee_bonuses_employeeIdToemployees\", fields: [employeeId], references: [id], onDelete: Cascade)\n\n  @@map(\"employee_bonuses\")\n}\n\nmodel EmployeeBusinessAssignments {\n  id         String     @id\n  role       String?\n  notes      String?\n  assignedBy String?\n  businessId String\n  createdAt  DateTime   @default(now())\n  employeeId String\n  endDate    DateTime?\n  isActive   Boolean    @default(true)\n  isPrimary  Boolean    @default(false)\n  startDate  DateTime   @default(now())\n  updatedAt  DateTime   @default(now())\n  businesses Businesses @relation(fields: [businessId], references: [id])\n  employees  Employees  @relation(fields: [employeeId], references: [id], onDelete: Cascade)\n\n  @@unique([employeeId, businessId])\n  @@map(\"employee_business_assignments\")\n}\n\nmodel EmployeeContracts {\n  id                                                                         String              @id\n  version                                                                    Int                 @default(1)\n  status                                                                     String              @default(\"draft\")\n  notes                                                                      String?\n  additionalBusinesses                                                       String[]\n  approvedAt                                                                 DateTime?\n  approvedBy                                                                 String?\n  baseSalary                                                                 Decimal             @db.Decimal(12, 2)\n  compensationTypeId                                                         String\n  contractNumber                                                             String              @unique\n  createdAt                                                                  DateTime            @default(now())\n  createdBy                                                                  String?\n  customResponsibilities                                                     String?\n  employeeId                                                                 String\n  employeeSignedAt                                                           DateTime?\n  endDate                                                                    DateTime?\n  isCommissionBased                                                          Boolean             @default(false)\n  isSalaryBased                                                              Boolean             @default(true)\n  jobTitleId                                                                 String\n  managerSignedAt                                                            DateTime?\n  pdfUrl                                                                     String?\n  primaryBusinessId                                                          String\n  probationPeriodMonths                                                      Int?\n  signedPdfUrl                                                               String?\n  startDate                                                                  DateTime\n  supervisorId                                                               String?\n  supervisorName                                                             String?\n  supervisorTitle                                                            String?\n  updatedAt                                                                  DateTime            @default(now())\n  commissionAmount                                                           Decimal?            @db.Decimal(12, 2)\n  contractDurationMonths                                                     Int?\n  livingAllowance                                                            Decimal?            @db.Decimal(12, 2)\n  pdfGenerationData                                                          Json?\n  umbrellaBusinessId                                                         String?\n  umbrellaBusinessName                                                       String?             @default(\"Demo Umbrella Company\")\n  businessAssignments                                                        Json?\n  previousContractId                                                         String?\n  copiedFromContractId                                                       String?\n  isRenewal                                                                  Boolean             @default(false)\n  originalContractId                                                         String?\n  renewalCount                                                               Int                 @default(0)\n  contract_benefits                                                          ContractBenefits[]\n  contract_renewals_contract_renewals_newContractIdToemployee_contracts      ContractRenewals[]  @relation(\"contract_renewals_newContractIdToemployee_contracts\")\n  contract_renewals_contract_renewals_originalContractIdToemployee_contracts ContractRenewals[]  @relation(\"contract_renewals_originalContractIdToemployee_contracts\")\n  compensation_types                                                         CompensationTypes   @relation(fields: [compensationTypeId], references: [id])\n  employees_employee_contracts_employeeIdToemployees                         Employees           @relation(\"employee_contracts_employeeIdToemployees\", fields: [employeeId], references: [id], onDelete: Cascade)\n  job_titles                                                                 JobTitles           @relation(fields: [jobTitleId], references: [id])\n  employee_contracts                                                         EmployeeContracts?  @relation(\"employee_contractsToemployee_contracts\", fields: [previousContractId], references: [id])\n  other_employee_contracts                                                   EmployeeContracts[] @relation(\"employee_contractsToemployee_contracts\")\n  businesses_employee_contracts_primaryBusinessIdTobusinesses                Businesses          @relation(\"employee_contracts_primaryBusinessIdTobusinesses\", fields: [primaryBusinessId], references: [id])\n  employees_employee_contracts_supervisorIdToemployees                       Employees?          @relation(\"employee_contracts_supervisorIdToemployees\", fields: [supervisorId], references: [id])\n  businesses_employee_contracts_umbrellaBusinessIdTobusinesses               Businesses?         @relation(\"employee_contracts_umbrellaBusinessIdTobusinesses\", fields: [umbrellaBusinessId], references: [id])\n\n  @@map(\"employee_contracts\")\n}\n\nmodel EmployeeDeductionPayments {\n  id                  String             @id\n  amount              Decimal            @db.Decimal(12, 2)\n  createdAt           DateTime           @default(now())\n  deductionId         String\n  paymentDate         DateTime\n  processedBy         String?\n  employee_deductions EmployeeDeductions @relation(fields: [deductionId], references: [id], onDelete: Cascade)\n  employees           Employees?         @relation(fields: [processedBy], references: [id])\n\n  @@map(\"employee_deduction_payments\")\n}\n\nmodel EmployeeDeductions {\n  id                                                  String                      @id\n  amount                                              Decimal                     @db.Decimal(12, 2)\n  approvedAt                                          DateTime?\n  approvedBy                                          String?\n  createdAt                                           DateTime                    @default(now())\n  employeeId                                          String\n  reason                                              String?\n  type                                                String\n  employee_deduction_payments                         EmployeeDeductionPayments[]\n  employees_employee_deductions_approvedByToemployees Employees?                  @relation(\"employee_deductions_approvedByToemployees\", fields: [approvedBy], references: [id])\n  employees_employee_deductions_employeeIdToemployees Employees                   @relation(\"employee_deductions_employeeIdToemployees\", fields: [employeeId], references: [id], onDelete: Cascade)\n\n  @@map(\"employee_deductions\")\n}\n\nmodel EmployeeLeaveBalance {\n  id              String    @id\n  year            Int\n  annualLeaveDays Int       @default(0)\n  createdAt       DateTime  @default(now())\n  employeeId      String\n  remainingAnnual Int       @default(0)\n  remainingSick   Int       @default(0)\n  sickLeaveDays   Int       @default(0)\n  updatedAt       DateTime\n  usedAnnualDays  Int       @default(0)\n  usedSickDays    Int       @default(0)\n  employees       Employees @relation(fields: [employeeId], references: [id], onDelete: Cascade)\n\n  @@unique([employeeId, year])\n  @@map(\"employee_leave_balance\")\n}\n\nmodel EmployeeLeaveRequests {\n  id                                                      String     @id\n  reason                                                  String?\n  status                                                  String     @default(\"pending\")\n  approvedAt                                              DateTime?\n  approvedBy                                              String?\n  createdAt                                               DateTime   @default(now())\n  daysRequested                                           Int\n  employeeId                                              String\n  endDate                                                 DateTime\n  leaveType                                               String\n  rejectionReason                                         String?\n  startDate                                               DateTime\n  updatedAt                                               DateTime\n  employees_employee_leave_requests_approvedByToemployees Employees? @relation(\"employee_leave_requests_approvedByToemployees\", fields: [approvedBy], references: [id])\n  employees_employee_leave_requests_employeeIdToemployees Employees  @relation(\"employee_leave_requests_employeeIdToemployees\", fields: [employeeId], references: [id], onDelete: Cascade)\n\n  @@map(\"employee_leave_requests\")\n}\n\nmodel EmployeeLoanPayments {\n  id             String        @id\n  amount         Decimal       @db.Decimal(12, 2)\n  createdAt      DateTime      @default(now())\n  loanId         String\n  paymentDate    DateTime\n  processedBy    String?\n  employee_loans EmployeeLoans @relation(fields: [loanId], references: [id], onDelete: Cascade)\n  employees      Employees?    @relation(fields: [processedBy], references: [id])\n\n  @@map(\"employee_loan_payments\")\n}\n\nmodel EmployeeLoans {\n  id                                             String                 @id\n  status                                         String                 @default(\"active\")\n  approvedAt                                     DateTime?\n  approvedBy                                     String?\n  createdAt                                      DateTime               @default(now())\n  employeeId                                     String\n  loanAmount                                     Decimal                @db.Decimal(12, 2)\n  monthlyDeduction                               Decimal                @db.Decimal(12, 2)\n  remainingBalance                               Decimal                @db.Decimal(12, 2)\n  remainingMonths                                Int\n  totalMonths                                    Int\n  updatedAt                                      DateTime\n  employee_loan_payments                         EmployeeLoanPayments[]\n  employees_employee_loans_approvedByToemployees Employees?             @relation(\"employee_loans_approvedByToemployees\", fields: [approvedBy], references: [id])\n  employees_employee_loans_employeeIdToemployees Employees              @relation(\"employee_loans_employeeIdToemployees\", fields: [employeeId], references: [id], onDelete: Cascade)\n\n  @@map(\"employee_loans\")\n}\n\nmodel EmployeeSalaryIncreases {\n  id                                                        String     @id\n  reason                                                    String?\n  approvedAt                                                DateTime?\n  approvedBy                                                String?\n  createdAt                                                 DateTime   @default(now())\n  effectiveDate                                             DateTime\n  employeeId                                                String\n  increaseAmount                                            Decimal    @db.Decimal(12, 2)\n  increasePercent                                           Decimal    @db.Decimal(5, 2)\n  newSalary                                                 Decimal    @db.Decimal(12, 2)\n  previousSalary                                            Decimal    @db.Decimal(12, 2)\n  employees_employee_salary_increases_approvedByToemployees Employees? @relation(\"employee_salary_increases_approvedByToemployees\", fields: [approvedBy], references: [id])\n  employees_employee_salary_increases_employeeIdToemployees Employees  @relation(\"employee_salary_increases_employeeIdToemployees\", fields: [employeeId], references: [id], onDelete: Cascade)\n\n  @@map(\"employee_salary_increases\")\n}\n\nmodel EmployeeTimeTracking {\n  id            String    @id\n  employeeId    String\n  year          Int\n  month         Int\n  workDays      Int       @default(0)\n  totalHours    Decimal?  @db.Decimal(5, 2)\n  overtimeHours Decimal?  @db.Decimal(5, 2)\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime\n  employees     Employees @relation(fields: [employeeId], references: [id], onDelete: Cascade)\n\n  @@unique([employeeId, year, month])\n  @@map(\"employee_time_tracking\")\n}\n\nmodel Employees {\n  id                                                                        String                        @id\n  email                                                                     String?                       @unique\n  phone                                                                     String\n  address                                                                   String?\n  employmentStatus                                                          String                        @default(\"active\")\n  notes                                                                     String?\n  compensationTypeId                                                        String\n  createdAt                                                                 DateTime                      @default(now())\n  createdBy                                                                 String?\n  customResponsibilities                                                    String?\n  dateOfBirth                                                               DateTime?\n  employeeNumber                                                            String                        @unique\n  firstName                                                                 String\n  fullName                                                                  String\n  hireDate                                                                  DateTime\n  idFormatTemplateId                                                        String?\n  isActive                                                                  Boolean                       @default(true)\n  jobTitleId                                                                String\n  lastName                                                                  String\n  nationalId                                                                String                        @unique\n  primaryBusinessId                                                         String\n  profilePhotoUrl                                                           String?\n  startDate                                                                 DateTime?\n  supervisorId                                                              String?\n  terminationDate                                                           DateTime?\n  updatedAt                                                                 DateTime                      @default(now())\n  userId                                                                    String?                       @unique\n  driverLicenseNumber                                                       String?\n  driverLicenseTemplateId                                                   String?\n  business_orders                                                           BusinessOrders[]\n  business_stock_movements                                                  BusinessStockMovements[]\n  contract_renewals                                                         ContractRenewals[]\n  disciplinary_actions_disciplinary_actions_createdByToemployees            DisciplinaryActions[]         @relation(\"disciplinary_actions_createdByToemployees\")\n  disciplinary_actions_disciplinary_actions_employeeIdToemployees           DisciplinaryActions[]         @relation(\"disciplinary_actions_employeeIdToemployees\")\n  employee_allowances_employee_allowances_approvedByToemployees             EmployeeAllowances[]          @relation(\"employee_allowances_approvedByToemployees\")\n  employee_allowances_employee_allowances_employeeIdToemployees             EmployeeAllowances[]          @relation(\"employee_allowances_employeeIdToemployees\")\n  employee_attendance                                                       EmployeeAttendance[]\n  employee_benefits                                                         EmployeeBenefits[]\n  employee_bonuses_employee_bonuses_approvedByToemployees                   EmployeeBonuses[]             @relation(\"employee_bonuses_approvedByToemployees\")\n  employee_bonuses_employee_bonuses_employeeIdToemployees                   EmployeeBonuses[]             @relation(\"employee_bonuses_employeeIdToemployees\")\n  employee_business_assignments                                             EmployeeBusinessAssignments[]\n  employee_contracts_employee_contracts_employeeIdToemployees               EmployeeContracts[]           @relation(\"employee_contracts_employeeIdToemployees\")\n  employee_contracts_employee_contracts_supervisorIdToemployees             EmployeeContracts[]           @relation(\"employee_contracts_supervisorIdToemployees\")\n  employee_deduction_payments                                               EmployeeDeductionPayments[]\n  employee_deductions_employee_deductions_approvedByToemployees             EmployeeDeductions[]          @relation(\"employee_deductions_approvedByToemployees\")\n  employee_deductions_employee_deductions_employeeIdToemployees             EmployeeDeductions[]          @relation(\"employee_deductions_employeeIdToemployees\")\n  employee_leave_balance                                                    EmployeeLeaveBalance[]\n  employee_leave_requests_employee_leave_requests_approvedByToemployees     EmployeeLeaveRequests[]       @relation(\"employee_leave_requests_approvedByToemployees\")\n  employee_leave_requests_employee_leave_requests_employeeIdToemployees     EmployeeLeaveRequests[]       @relation(\"employee_leave_requests_employeeIdToemployees\")\n  employee_loan_payments                                                    EmployeeLoanPayments[]\n  employee_loans_employee_loans_approvedByToemployees                       EmployeeLoans[]               @relation(\"employee_loans_approvedByToemployees\")\n  employee_loans_employee_loans_employeeIdToemployees                       EmployeeLoans[]               @relation(\"employee_loans_employeeIdToemployees\")\n  employee_salary_increases_employee_salary_increases_approvedByToemployees EmployeeSalaryIncreases[]     @relation(\"employee_salary_increases_approvedByToemployees\")\n  employee_salary_increases_employee_salary_increases_employeeIdToemployees EmployeeSalaryIncreases[]     @relation(\"employee_salary_increases_employeeIdToemployees\")\n  employee_time_tracking                                                    EmployeeTimeTracking[]\n  compensation_types                                                        CompensationTypes             @relation(fields: [compensationTypeId], references: [id])\n  driver_license_templates                                                  DriverLicenseTemplates?       @relation(fields: [driverLicenseTemplateId], references: [id])\n  id_format_templates                                                       IdFormatTemplates?            @relation(fields: [idFormatTemplateId], references: [id])\n  job_titles                                                                JobTitles                     @relation(fields: [jobTitleId], references: [id])\n  businesses                                                                Businesses                    @relation(fields: [primaryBusinessId], references: [id])\n  employees                                                                 Employees?                    @relation(\"employeesToemployees\", fields: [supervisorId], references: [id])\n  other_employees                                                           Employees[]                   @relation(\"employeesToemployees\")\n  users                                                                     Users?                        @relation(fields: [userId], references: [id])\n  payroll_entries                                                           PayrollEntries[]\n\n  @@map(\"employees\")\n}\n\nmodel ExpenseCategories {\n  id        String   @id\n  name      String\n  emoji     String?  @default(\"💰\")\n  color     String   @default(\"#3B82F6\")\n  createdAt DateTime @default(now())\n  isDefault Boolean  @default(false)\n  userId    String?\n  users     Users?   @relation(fields: [userId], references: [id])\n\n  @@map(\"expense_categories\")\n}\n\nmodel FundSources {\n  id         String   @id\n  name       String\n  emoji      String?  @default(\"💰\")\n  createdAt  DateTime @default(now())\n  isDefault  Boolean  @default(false)\n  usageCount Int      @default(0)\n  userId     String?\n  users      Users?   @relation(fields: [userId], references: [id])\n\n  @@map(\"fund_sources\")\n}\n\nmodel IdFormatTemplates {\n  id          String      @id\n  name        String\n  description String?\n  pattern     String\n  example     String\n  countryCode String?\n  createdAt   DateTime    @default(now())\n  isActive    Boolean     @default(true)\n  updatedAt   DateTime    @default(now())\n  employees   Employees[]\n  persons     Persons[]\n\n  @@map(\"id_format_templates\")\n}\n\nmodel InitialLoadSessions {\n  id               String    @id\n  sessionId        String    @unique\n  sourceNodeId     String\n  targetNodeId     String\n  tableName        String\n  totalRecords     Int       @default(0)\n  processedRecords Int       @default(0)\n  status           String    @default(\"PENDING\")\n  startedAt        DateTime  @default(now())\n  completedAt      DateTime?\n  errorMessage     String?\n  batchSize        Int       @default(1000)\n  currentBatch     Int       @default(0)\n  metadata         Json?\n  createdAt        DateTime  @default(now())\n\n  @@map(\"initial_load_sessions\")\n}\n\nmodel InterBusinessLoans {\n  id                                                             String             @id\n  loanNumber                                                     String             @unique\n  principalAmount                                                Decimal            @db.Decimal(12, 2)\n  interestRate                                                   Decimal            @default(0) @db.Decimal(5, 2)\n  totalAmount                                                    Decimal            @db.Decimal(12, 2)\n  remainingBalance                                               Decimal            @db.Decimal(12, 2)\n  lenderType                                                     String\n  lenderUserId                                                   String?\n  lenderBusinessId                                               String?\n  borrowerBusinessId                                             String?\n  loanDate                                                       DateTime\n  dueDate                                                        DateTime?\n  status                                                         String             @default(\"active\")\n  terms                                                          String?\n  notes                                                          String?\n  createdAt                                                      DateTime           @default(now())\n  updatedAt                                                      DateTime\n  createdBy                                                      String\n  borrowerPersonId                                               String?\n  borrowerType                                                   String\n  businesses_inter_business_loans_borrowerBusinessIdTobusinesses Businesses?        @relation(\"inter_business_loans_borrowerBusinessIdTobusinesses\", fields: [borrowerBusinessId], references: [id])\n  persons                                                        Persons?           @relation(fields: [borrowerPersonId], references: [id])\n  users_inter_business_loans_createdByTousers                    Users              @relation(\"inter_business_loans_createdByTousers\", fields: [createdBy], references: [id])\n  businesses_inter_business_loans_lenderBusinessIdTobusinesses   Businesses?        @relation(\"inter_business_loans_lenderBusinessIdTobusinesses\", fields: [lenderBusinessId], references: [id])\n  users_inter_business_loans_lenderUserIdTousers                 Users?             @relation(\"inter_business_loans_lenderUserIdTousers\", fields: [lenderUserId], references: [id])\n  loan_transactions                                              LoanTransactions[]\n\n  @@map(\"inter_business_loans\")\n}\n\nmodel JobTitles {\n  id                 String              @id\n  title              String              @unique\n  description        String?\n  responsibilities   String[]\n  department         String?\n  level              String?\n  isActive           Boolean             @default(true)\n  createdAt          DateTime            @default(now())\n  updatedAt          DateTime            @default(now())\n  employee_contracts EmployeeContracts[]\n  employees          Employees[]\n\n  @@map(\"job_titles\")\n}\n\nmodel LoanTransactions {\n  id                    String             @id\n  loanId                String\n  transactionType       String\n  amount                Decimal            @db.Decimal(12, 2)\n  description           String?\n  transactionDate       DateTime\n  personalExpenseId     String?\n  businessTransactionId String?\n  isAutoGenerated       Boolean            @default(false)\n  autoGeneratedNote     String?\n  initiatedFrom         String?\n  balanceAfter          Decimal            @db.Decimal(12, 2)\n  createdAt             DateTime           @default(now())\n  createdBy             String\n  users                 Users              @relation(fields: [createdBy], references: [id])\n  inter_business_loans  InterBusinessLoans @relation(fields: [loanId], references: [id], onDelete: Cascade)\n  personal_expenses     PersonalExpenses?  @relation(fields: [personalExpenseId], references: [id])\n\n  @@map(\"loan_transactions\")\n}\n\nmodel MenuComboItems {\n  id                String           @id\n  comboId           String\n  productId         String\n  variantId         String?\n  quantity          Int              @default(1)\n  isRequired        Boolean          @default(true)\n  sortOrder         Int              @default(0)\n  createdAt         DateTime         @default(now())\n  menu_combos       MenuCombos       @relation(fields: [comboId], references: [id], onDelete: Cascade)\n  business_products BusinessProducts @relation(fields: [productId], references: [id], onDelete: Cascade)\n  product_variants  ProductVariants? @relation(fields: [variantId], references: [id])\n\n  @@map(\"menu_combo_items\")\n}\n\nmodel MenuCombos {\n  id                 String           @id\n  businessId         String\n  name               String\n  description        String?\n  totalPrice         Decimal          @db.Decimal(10, 2)\n  originalTotalPrice Decimal?         @db.Decimal(10, 2)\n  isActive           Boolean          @default(true)\n  isAvailable        Boolean          @default(true)\n  imageUrl           String?\n  preparationTime    Int              @default(0)\n  discountPercent    Decimal?         @db.Decimal(5, 2)\n  promotionStartDate DateTime?\n  promotionEndDate   DateTime?\n  createdAt          DateTime         @default(now())\n  updatedAt          DateTime\n  menu_combo_items   MenuComboItems[]\n  businesses         Businesses       @relation(fields: [businessId], references: [id], onDelete: Cascade)\n\n  @@map(\"menu_combos\")\n}\n\nmodel MenuItems {\n  id          String       @id\n  name        String\n  description String?\n  price       Decimal      @db.Decimal(10, 2)\n  category    String\n  barcode     String?\n  createdAt   DateTime     @default(now())\n  isAvailable Boolean      @default(true)\n  updatedAt   DateTime     @default(now())\n  order_items OrderItems[]\n\n  @@map(\"menu_items\")\n}\n\nmodel MenuPromotions {\n  id                   String        @id\n  businessId           String\n  name                 String\n  description          String?\n  type                 PromotionType\n  value                Decimal       @db.Decimal(10, 2)\n  minOrderAmount       Decimal?      @db.Decimal(10, 2)\n  maxDiscountAmount    Decimal?      @db.Decimal(10, 2)\n  startDate            DateTime\n  endDate              DateTime?\n  startTime            String?\n  endTime              String?\n  daysOfWeek           String[]\n  isActive             Boolean       @default(true)\n  usageLimit           Int?\n  usageCount           Int           @default(0)\n  applicableCategories String[]\n  applicableProducts   String[]\n  createdAt            DateTime      @default(now())\n  updatedAt            DateTime\n  businesses           Businesses    @relation(fields: [businessId], references: [id], onDelete: Cascade)\n\n  @@map(\"menu_promotions\")\n}\n\nmodel NetworkPartitions {\n  id                 String    @id\n  nodeId             String\n  partitionType      String\n  startTime          DateTime\n  detectedAt         DateTime\n  isResolved         Boolean   @default(false)\n  endTime            DateTime?\n  partitionMetadata  Json?\n  resolutionMetadata Json?\n  createdAt          DateTime  @default(now())\n\n  @@map(\"network_partitions\")\n}\n\nmodel NodeStates {\n  id          String   @id\n  nodeId      String   @unique\n  nodeName    String\n  lastSeen    DateTime @default(now())\n  isOnline    Boolean  @default(false)\n  syncVersion String\n  metadata    Json?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime\n\n  @@map(\"node_states\")\n}\n\nmodel OfflineQueue {\n  id           String    @id\n  nodeId       String\n  eventId      String\n  tableName    String\n  recordId     String\n  operation    String\n  changeData   Json\n  beforeData   Json?\n  queuedAt     DateTime  @default(now())\n  priority     Int       @default(5)\n  retryCount   Int       @default(0)\n  lastAttempt  DateTime?\n  errorMessage String?\n  dependencies Json?\n  isProcessed  Boolean   @default(false)\n\n  @@map(\"offline_queue\")\n}\n\nmodel OrderItems {\n  id         String     @id\n  quantity   Int\n  price      Decimal    @db.Decimal(10, 2)\n  notes      String?\n  menuItemId String?\n  orderId    String?\n  menu_items MenuItems? @relation(fields: [menuItemId], references: [id])\n  orders     Orders?    @relation(fields: [orderId], references: [id], onDelete: Cascade)\n\n  @@map(\"order_items\")\n}\n\nmodel Orders {\n  id          String       @id\n  total       Decimal      @db.Decimal(10, 2)\n  status      String       @default(\"pending\")\n  createdAt   DateTime     @default(now())\n  createdBy   String?\n  orderNumber String       @unique\n  tableNumber String?\n  order_items OrderItems[]\n  users       Users?       @relation(fields: [createdBy], references: [id])\n\n  @@map(\"orders\")\n}\n\nmodel PayrollAdjustments {\n  id                                          String          @id\n  payrollEntryId                              String?\n  amount                                      Decimal         @db.Decimal(12, 2)\n  reason                                      String?\n  createdAt                                   DateTime        @default(now())\n  createdBy                                   String?\n  adjustmentType                              String?\n  approvedAt                                  DateTime?\n  approvedBy                                  String?\n  status                                      String          @default(\"pending\")\n  updatedAt                                   DateTime        @default(now())\n  users_payroll_adjustments_approvedByTousers Users?          @relation(\"payroll_adjustments_approvedByTousers\", fields: [approvedBy], references: [id])\n  users_payroll_adjustments_createdByTousers  Users?          @relation(\"payroll_adjustments_createdByTousers\", fields: [createdBy], references: [id])\n  payroll_entries                             PayrollEntries? @relation(fields: [payrollEntryId], references: [id], onDelete: Cascade)\n\n  @@index([payrollEntryId])\n  @@map(\"payroll_adjustments\")\n}\n\nmodel PayrollEntries {\n  id                      String                 @id\n  payrollPeriodId         String?\n  employeeId              String?\n  employeeNumber          String?\n  employeeName            String?\n  nationalId              String?\n  overtimeHours           Decimal                @default(0) @db.Decimal(10, 2)\n  baseSalary              Decimal                @default(0) @db.Decimal(12, 2)\n  commission              Decimal                @default(0) @db.Decimal(12, 2)\n  livingAllowance         Decimal                @default(0) @db.Decimal(12, 2)\n  vehicleAllowance        Decimal                @default(0) @db.Decimal(12, 2)\n  travelAllowance         Decimal                @default(0) @db.Decimal(12, 2)\n  overtimePay             Decimal                @default(0) @db.Decimal(12, 2)\n  benefitsTotal           Decimal                @default(0) @db.Decimal(12, 2)\n  benefitsBreakdown       Json?\n  loanDeductions          Decimal                @default(0) @db.Decimal(12, 2)\n  advanceDeductions       Decimal                @default(0) @db.Decimal(12, 2)\n  advanceBreakdown        Json?\n  miscDeductions          Decimal                @default(0) @db.Decimal(12, 2)\n  grossPay                Decimal                @default(0) @db.Decimal(12, 2)\n  totalDeductions         Decimal                @default(0) @db.Decimal(12, 2)\n  netPay                  Decimal                @default(0) @db.Decimal(12, 2)\n  adjustmentsTotal        Decimal                @default(0) @db.Decimal(12, 2)\n  createdAt               DateTime               @default(now())\n  updatedAt               DateTime               @default(now())\n  notes                   String?\n  absenceDays             Int                    @default(0)\n  dateOfBirth             DateTime?\n  hireDate                DateTime?\n  leaveDays               Int                    @default(0)\n  processedBy             String?\n  sickDays                Int                    @default(0)\n  terminationDate         DateTime?\n  workDays                Int                    @default(0)\n  absenceFraction         Decimal                @default(0) @db.Decimal(4, 2)\n  contractEndDate         DateTime?\n  contractId              String?\n  contractNumber          String?\n  contractStartDate       DateTime?\n  isProrated              Boolean                @default(false)\n  doubleTimeOvertimeHours Decimal                @default(0) @db.Decimal(10, 2)\n  standardOvertimeHours   Decimal                @default(0) @db.Decimal(10, 2)\n  contractSnapshot        Json?\n  payroll_adjustments     PayrollAdjustments[]\n  employees               Employees?             @relation(fields: [employeeId], references: [id])\n  payroll_periods         PayrollPeriods?        @relation(fields: [payrollPeriodId], references: [id], onDelete: Cascade)\n  users                   Users?                 @relation(fields: [processedBy], references: [id])\n  payroll_entry_benefits  PayrollEntryBenefits[]\n\n  @@index([contractId])\n  @@index([employeeId])\n  @@index([payrollPeriodId])\n  @@map(\"payroll_entries\")\n}\n\nmodel PayrollEntryBenefits {\n  id                String         @id\n  payrollEntryId    String\n  benefitTypeId     String\n  benefitName       String\n  amount            Decimal        @db.Decimal(12, 2)\n  isActive          Boolean        @default(true)\n  deactivatedReason String?\n  source            String         @default(\"contract\")\n  createdAt         DateTime       @default(now())\n  updatedAt         DateTime       @default(now())\n  benefit_types     BenefitTypes   @relation(fields: [benefitTypeId], references: [id], onDelete: Cascade)\n  payroll_entries   PayrollEntries @relation(fields: [payrollEntryId], references: [id], onDelete: Cascade)\n\n  @@index([benefitTypeId])\n  @@index([payrollEntryId])\n  @@map(\"payroll_entry_benefits\")\n}\n\nmodel PayrollExports {\n  id              String         @id\n  payrollPeriodId String\n  businessId      String\n  year            Int\n  month           Int\n  fileName        String\n  fileUrl         String\n  fileSize        Int\n  format          String         @default(\"excel\")\n  includesMonths  Int[]\n  employeeCount   Int\n  totalGrossPay   Decimal        @db.Decimal(12, 2)\n  totalNetPay     Decimal        @db.Decimal(12, 2)\n  exportedAt      DateTime?\n  exportedBy      String\n  generationType  String\n  notes           String?\n  businesses      Businesses     @relation(fields: [businessId], references: [id], map: \"payroll_exports_businessid_fkey\")\n  users           Users          @relation(fields: [exportedBy], references: [id], map: \"payroll_exports_exportedby_fkey\")\n  payroll_periods PayrollPeriods @relation(fields: [payrollPeriodId], references: [id], map: \"payroll_exports_payrollperiodid_fkey\")\n\n  @@map(\"payroll_exports\")\n}\n\nmodel PayrollPeriods {\n  id                                      String           @id\n  businessId                              String\n  year                                    Int\n  month                                   Int\n  periodStart                             DateTime?\n  periodEnd                               DateTime?\n  status                                  String           @default(\"draft\")\n  totalEmployees                          Int              @default(0)\n  totalGrossPay                           Decimal          @default(0) @db.Decimal(12, 2)\n  totalDeductions                         Decimal          @default(0) @db.Decimal(12, 2)\n  totalNetPay                             Decimal          @default(0) @db.Decimal(12, 2)\n  createdAt                               DateTime         @default(now())\n  createdBy                               String?\n  approvedAt                              DateTime?\n  approvedBy                              String?\n  exportedAt                              DateTime?\n  closedAt                                DateTime?\n  notes                                   String?\n  updatedAt                               DateTime         @default(now())\n  payroll_entries                         PayrollEntries[]\n  payroll_exports                         PayrollExports[]\n  users_payroll_periods_approvedByTousers Users?           @relation(\"payroll_periods_approvedByTousers\", fields: [approvedBy], references: [id])\n  businesses                              Businesses       @relation(fields: [businessId], references: [id], onDelete: Cascade)\n  users_payroll_periods_createdByTousers  Users?           @relation(\"payroll_periods_createdByTousers\", fields: [createdBy], references: [id])\n\n  @@unique([businessId, year, month])\n  @@index([businessId])\n  @@index([year, month])\n  @@map(\"payroll_periods\")\n}\n\nmodel PermissionTemplates {\n  id                   String                @id\n  name                 String\n  permissions          Json                  @default(\"{}\")\n  businessType         String\n  createdAt            DateTime              @default(now())\n  createdBy            String\n  isActive             Boolean               @default(true)\n  updatedAt            DateTime              @default(now())\n  business_memberships BusinessMemberships[]\n  users                Users                 @relation(fields: [createdBy], references: [id])\n\n  @@map(\"permission_templates\")\n}\n\nmodel PersonalBudgets {\n  id          String   @id\n  amount      Decimal  @db.Decimal(12, 2)\n  description String?\n  type        String   @default(\"deposit\")\n  createdAt   DateTime @default(now())\n  userId      String?\n  users       Users?   @relation(fields: [userId], references: [id])\n\n  @@map(\"personal_budgets\")\n}\n\nmodel PersonalExpenses {\n  id                   String                @id\n  category             String\n  description          String\n  amount               Decimal               @db.Decimal(12, 2)\n  date                 DateTime\n  tags                 String?\n  createdAt            DateTime              @default(now())\n  receiptUrl           String?\n  userId               String?\n  notes                String?\n  updatedAt            DateTime              @default(now())\n  loan_transactions    LoanTransactions[]\n  users                Users?                @relation(fields: [userId], references: [id])\n  project_transactions ProjectTransactions[]\n\n  @@map(\"personal_expenses\")\n}\n\nmodel Persons {\n  id                       String                  @id\n  email                    String?                 @unique\n  phone                    String\n  address                  String?\n  notes                    String?\n  createdAt                DateTime                @default(now())\n  createdBy                String?\n  fullName                 String\n  idFormatTemplateId       String?\n  isActive                 Boolean                 @default(true)\n  nationalId               String                  @unique\n  updatedAt                DateTime                @default(now())\n  driverLicenseNumber      String?\n  driverLicenseTemplateId  String?\n  inter_business_loans     InterBusinessLoans[]\n  users                    Users?                  @relation(fields: [createdBy], references: [id])\n  driver_license_templates DriverLicenseTemplates? @relation(fields: [driverLicenseTemplateId], references: [id])\n  id_format_templates      IdFormatTemplates?      @relation(fields: [idFormatTemplateId], references: [id])\n  project_contractors      ProjectContractors[]\n  project_transactions     ProjectTransactions[]\n\n  @@map(\"persons\")\n}\n\nmodel ProductAttributes {\n  id                String            @id\n  productId         String\n  key               String\n  value             String\n  dataType          AttributeDataType @default(TEXT)\n  displayOrder      Int               @default(0)\n  createdAt         DateTime          @default(now())\n  business_products BusinessProducts  @relation(fields: [productId], references: [id])\n\n  @@unique([productId, key])\n  @@map(\"product_attributes\")\n}\n\nmodel ProductImages {\n  id                String           @id\n  productId         String\n  imageUrl          String\n  altText           String?\n  isPrimary         Boolean          @default(false)\n  sortOrder         Int              @default(0)\n  imageSize         ImageSize        @default(MEDIUM)\n  businessType      String\n  attributes        Json?\n  createdAt         DateTime         @default(now())\n  updatedAt         DateTime\n  business_products BusinessProducts @relation(fields: [productId], references: [id])\n\n  @@map(\"product_images\")\n}\n\nmodel ProductVariants {\n  id                       String                   @id\n  productId                String\n  name                     String?\n  sku                      String                   @unique\n  barcode                  String?\n  price                    Decimal?                 @db.Decimal(10, 2)\n  stockQuantity            Int                      @default(0)\n  reorderLevel             Int                      @default(0)\n  isActive                 Boolean                  @default(true)\n  attributes               Json?\n  isAvailable              Boolean                  @default(true)\n  originalPrice            Decimal?                 @db.Decimal(10, 2)\n  discountPercent          Decimal?                 @db.Decimal(5, 2)\n  discountAmount           Decimal?                 @db.Decimal(10, 2)\n  createdAt                DateTime                 @default(now())\n  updatedAt                DateTime\n  business_order_items     BusinessOrderItems[]\n  business_stock_movements BusinessStockMovements[]\n  menu_combo_items         MenuComboItems[]\n  business_products        BusinessProducts         @relation(fields: [productId], references: [id])\n\n  @@map(\"product_variants\")\n}\n\nmodel ProjectContractors {\n  id                           String                       @id\n  role                         String?\n  status                       String                       @default(\"active\")\n  notes                        String?\n  createdAt                    DateTime                     @default(now())\n  endDate                      DateTime?\n  hourlyRate                   Decimal?                     @db.Decimal(12, 2)\n  isPrimary                    Boolean                      @default(false)\n  personId                     String\n  projectId                    String\n  startDate                    DateTime?\n  totalContractAmount          Decimal?                     @db.Decimal(12, 2)\n  updatedAt                    DateTime                     @default(now())\n  constructionProjectId        String?\n  construction_projects        ConstructionProjects?        @relation(fields: [constructionProjectId], references: [id], onDelete: Cascade)\n  persons                      Persons                      @relation(fields: [personId], references: [id], onDelete: Cascade)\n  projects                     Projects                     @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  project_transactions         ProjectTransactions[]\n  stage_contractor_assignments StageContractorAssignments[]\n\n  @@unique([projectId, personId])\n  @@map(\"project_contractors\")\n}\n\nmodel ProjectStages {\n  id                           String                       @id\n  name                         String\n  description                  String?\n  status                       String                       @default(\"pending\")\n  notes                        String?\n  completionDate               DateTime?\n  createdAt                    DateTime                     @default(now())\n  endDate                      DateTime?\n  estimatedAmount              Decimal?                     @db.Decimal(12, 2)\n  orderIndex                   Int                          @default(0)\n  projectId                    String\n  startDate                    DateTime?\n  updatedAt                    DateTime                     @default(now())\n  constructionProjectId        String?\n  construction_projects        ConstructionProjects?        @relation(fields: [constructionProjectId], references: [id], onDelete: Cascade)\n  projects                     Projects                     @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  project_transactions         ProjectTransactions[]\n  stage_contractor_assignments StageContractorAssignments[]\n\n  @@map(\"project_stages\")\n}\n\nmodel ProjectTransactions {\n  id                                           String                      @id\n  amount                                       Decimal                     @db.Decimal(12, 2)\n  description                                  String\n  status                                       String                      @default(\"pending\")\n  notes                                        String?\n  approvedAt                                   DateTime?\n  approvedBy                                   String?\n  createdAt                                    DateTime                    @default(now())\n  createdBy                                    String?\n  paidAt                                       DateTime?\n  paymentCategory                              String?\n  paymentMethod                                String?\n  personalExpenseId                            String\n  projectContractorId                          String?\n  projectId                                    String\n  receiptUrl                                   String?\n  recipientPersonId                            String?\n  referenceNumber                              String?\n  stageAssignmentId                            String?\n  stageId                                      String?\n  transactionType                              String\n  updatedAt                                    DateTime                    @default(now())\n  constructionProjectId                        String?\n  transactionSubType                           String?\n  users_project_transactions_approvedByTousers Users?                      @relation(\"project_transactions_approvedByTousers\", fields: [approvedBy], references: [id])\n  construction_projects                        ConstructionProjects?       @relation(fields: [constructionProjectId], references: [id], onDelete: Cascade)\n  users_project_transactions_createdByTousers  Users?                      @relation(\"project_transactions_createdByTousers\", fields: [createdBy], references: [id])\n  personal_expenses                            PersonalExpenses            @relation(fields: [personalExpenseId], references: [id], onDelete: Cascade)\n  project_contractors                          ProjectContractors?         @relation(fields: [projectContractorId], references: [id])\n  projects                                     Projects                    @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  persons                                      Persons?                    @relation(fields: [recipientPersonId], references: [id])\n  stage_contractor_assignments                 StageContractorAssignments? @relation(fields: [stageAssignmentId], references: [id])\n  project_stages                               ProjectStages?              @relation(fields: [stageId], references: [id])\n\n  @@map(\"project_transactions\")\n}\n\nmodel ProjectTypes {\n  id                    String                 @id\n  name                  String                 @unique\n  description           String?\n  businessType          String\n  isActive              Boolean                @default(true)\n  isSystem              Boolean                @default(false)\n  createdAt             DateTime               @default(now())\n  updatedAt             DateTime               @default(now())\n  construction_projects ConstructionProjects[]\n  projects              Projects[]\n\n  @@map(\"project_types\")\n}\n\nmodel Projects {\n  id                   String                @id\n  name                 String\n  description          String?\n  projectTypeId        String\n  businessType         String\n  businessId           String?\n  status               String                @default(\"active\")\n  budget               Decimal?              @db.Decimal(12, 2)\n  startDate            DateTime?\n  endDate              DateTime?\n  createdAt            DateTime              @default(now())\n  createdBy            String?\n  updatedAt            DateTime              @default(now())\n  project_contractors  ProjectContractors[]\n  project_stages       ProjectStages[]\n  project_transactions ProjectTransactions[]\n  businesses           Businesses?           @relation(fields: [businessId], references: [id])\n  users                Users?                @relation(fields: [createdBy], references: [id])\n  project_types        ProjectTypes          @relation(fields: [projectTypeId], references: [id])\n\n  @@map(\"projects\")\n}\n\nmodel Sessions {\n  id           String   @id\n  sessionToken String   @unique\n  userId       String\n  expires      DateTime\n  users        Users    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"sessions\")\n}\n\nmodel StageContractorAssignments {\n  id                   String                @id\n  notes                String?\n  createdAt            DateTime              @default(now())\n  depositAmount        Decimal?              @db.Decimal(12, 2)\n  depositPaidDate      DateTime?\n  depositPercentage    Decimal               @default(0.00) @db.Decimal(5, 2)\n  finalPaymentDate     DateTime?\n  isDepositPaid        Boolean               @default(false)\n  isFinalPaymentMade   Boolean               @default(false)\n  predeterminedAmount  Decimal               @db.Decimal(12, 2)\n  projectContractorId  String\n  stageId              String\n  updatedAt            DateTime              @default(now())\n  project_transactions ProjectTransactions[]\n  project_contractors  ProjectContractors    @relation(fields: [projectContractorId], references: [id], onDelete: Cascade)\n  project_stages       ProjectStages         @relation(fields: [stageId], references: [id], onDelete: Cascade)\n\n  @@unique([stageId, projectContractorId])\n  @@map(\"stage_contractor_assignments\")\n}\n\nmodel SupplierProducts {\n  id                 String            @id\n  supplierId         String\n  productId          String\n  supplierSku        String?\n  supplierPrice      Decimal           @db.Decimal(10, 2)\n  minimumOrder       Int               @default(1)\n  leadTimeDays       Int               @default(0)\n  isActive           Boolean           @default(true)\n  attributes         Json?\n  createdAt          DateTime          @default(now())\n  updatedAt          DateTime\n  business_products  BusinessProducts  @relation(fields: [productId], references: [id])\n  business_suppliers BusinessSuppliers @relation(fields: [supplierId], references: [id])\n\n  @@unique([supplierId, productId])\n  @@map(\"supplier_products\")\n}\n\nmodel SyncConfigurations {\n  id                  String    @id\n  nodeId              String    @unique\n  registrationKeyHash String?\n  lastConfigUpdate    DateTime?\n  configMetadata      Json?\n  createdAt           DateTime  @default(now())\n\n  @@map(\"sync_configurations\")\n}\n\nmodel SyncEvents {\n  eventId         String        @id\n  sourceNodeId    String\n  tableName       String\n  recordId        String\n  operation       SyncOperation\n  changeData      Json\n  beforeData      Json?\n  vectorClock     Json?\n  lamportClock    String?\n  checksum        String?\n  priority        Int           @default(5)\n  metadata        Json?\n  processed       Boolean       @default(false)\n  processedAt     DateTime?\n  processingError String?\n  retryCount      Int           @default(0)\n  createdAt       DateTime      @default(now())\n\n  @@map(\"sync_events\")\n}\n\nmodel SyncMetrics {\n  id                   String   @id\n  nodeId               String\n  metricDate           DateTime\n  eventsGenerated      Int      @default(0)\n  eventsReceived       Int      @default(0)\n  eventsProcessed      Int      @default(0)\n  eventsFailed         Int      @default(0)\n  conflictsDetected    Int      @default(0)\n  conflictsResolved    Int      @default(0)\n  syncLatencyMs        Int?\n  networkLatencyMs     Int?\n  dataTransferredBytes BigInt?\n  peersConnected       Int?     @default(0)\n  peersDiscovered      Int?     @default(0)\n  createdAt            DateTime @default(now())\n\n  @@unique([nodeId, metricDate], map: \"nodeId_metricDate\")\n  @@map(\"sync_metrics\")\n}\n\nmodel SyncNodes {\n  id               String    @id\n  nodeId           String    @unique\n  nodeName         String\n  ipAddress        String?\n  port             Int?\n  registrationKey  String?\n  publicKey        String?\n  isActive         Boolean   @default(true)\n  lastSeen         DateTime  @default(now())\n  nodeVersion      String?\n  databaseVersion  String?\n  schemaVersion    String?\n  schemaHash       String?\n  migrationName    String?\n  schemaAppliedAt  DateTime?\n  schemaCompatible Boolean   @default(true)\n  platformInfo     Json?\n  capabilities     Json?\n  createdAt        DateTime  @default(now())\n  updatedAt        DateTime  @default(now())\n\n  @@map(\"sync_nodes\")\n}\n\nmodel SyncSessions {\n  id           String    @id\n  sessionId    String    @unique\n  sourceNodeId String\n  targetNodeId String?\n  startedAt    DateTime  @default(now())\n  endedAt      DateTime?\n  endTime      DateTime?\n  status       String    @default(\"PENDING\")\n  errorMessage String?\n  metadata     Json?\n  createdAt    DateTime  @default(now())\n\n  @@map(\"sync_sessions\")\n}\n\nmodel Users {\n  id                                                              String                      @id\n  email                                                           String                      @unique\n  passwordHash                                                    String\n  name                                                            String\n  role                                                            String                      @default(\"user\")\n  permissions                                                     Json                        @default(\"{}\")\n  isActive                                                        Boolean                     @default(true)\n  passwordResetRequired                                           Boolean                     @default(false)\n  deactivatedAt                                                   DateTime?\n  deactivatedBy                                                   String?\n  deactivationReason                                              String?\n  deactivationNotes                                               String?\n  reactivatedAt                                                   DateTime?\n  reactivatedBy                                                   String?\n  reactivationNotes                                               String?\n  createdAt                                                       DateTime                    @default(now())\n  updatedAt                                                       DateTime                    @default(now())\n  lastAccessedAt                                                  DateTime?\n  lastAccessedBusinessId                                          String?\n  lastAccessedBusinessType                                        String?\n  username                                                        String?                     @unique\n  accounts                                                        Accounts[]\n  audit_logs                                                      AuditLogs[]\n  business_accounts                                               BusinessAccounts[]\n  business_memberships                                            BusinessMemberships[]\n  business_transactions                                           BusinessTransactions[]\n  chat_messages                                                   ChatMessages[]\n  chat_participants                                               ChatParticipants[]\n  chat_rooms                                                      ChatRooms[]\n  construction_expenses                                           ConstructionExpenses[]\n  construction_projects                                           ConstructionProjects[]\n  driver_authorizations                                           DriverAuthorizations[]\n  employees                                                       Employees?\n  expense_categories                                              ExpenseCategories[]\n  fund_sources                                                    FundSources[]\n  inter_business_loans_inter_business_loans_createdByTousers      InterBusinessLoans[]        @relation(\"inter_business_loans_createdByTousers\")\n  inter_business_loans_inter_business_loans_lenderUserIdTousers   InterBusinessLoans[]        @relation(\"inter_business_loans_lenderUserIdTousers\")\n  loan_transactions                                               LoanTransactions[]\n  orders                                                          Orders[]\n  payroll_adjustments_payroll_adjustments_approvedByTousers       PayrollAdjustments[]        @relation(\"payroll_adjustments_approvedByTousers\")\n  payroll_adjustments_payroll_adjustments_createdByTousers        PayrollAdjustments[]        @relation(\"payroll_adjustments_createdByTousers\")\n  payroll_entries                                                 PayrollEntries[]\n  payroll_exports                                                 PayrollExports[]\n  payroll_periods_payroll_periods_approvedByTousers               PayrollPeriods[]            @relation(\"payroll_periods_approvedByTousers\")\n  payroll_periods_payroll_periods_createdByTousers                PayrollPeriods[]            @relation(\"payroll_periods_createdByTousers\")\n  permission_templates                                            PermissionTemplates[]\n  personal_budgets                                                PersonalBudgets[]\n  personal_expenses                                               PersonalExpenses[]\n  persons                                                         Persons[]\n  project_transactions_project_transactions_approvedByTousers     ProjectTransactions[]       @relation(\"project_transactions_approvedByTousers\")\n  project_transactions_project_transactions_createdByTousers      ProjectTransactions[]       @relation(\"project_transactions_createdByTousers\")\n  projects                                                        Projects[]\n  sessions                                                        Sessions[]\n  vehicle_drivers                                                 VehicleDrivers[]\n  vehicle_expenses                                                VehicleExpenses[]\n  vehicle_maintenance_records                                     VehicleMaintenanceRecords[]\n  vehicle_reimbursements_vehicle_reimbursements_approvedByTousers VehicleReimbursements[]     @relation(\"vehicle_reimbursements_approvedByTousers\")\n  vehicle_reimbursements_vehicle_reimbursements_userIdTousers     VehicleReimbursements[]     @relation(\"vehicle_reimbursements_userIdTousers\")\n  vehicles                                                        Vehicles[]\n\n  @@map(\"users\")\n}\n\nmodel VehicleDrivers {\n  id                    String                 @id\n  fullName              String\n  licenseNumber         String                 @unique\n  licenseExpiry         DateTime\n  phoneNumber           String?\n  emailAddress          String?\n  emergencyContact      String?\n  emergencyPhone        String?\n  userId                String?\n  isActive              Boolean                @default(true)\n  dateOfBirth           DateTime?\n  address               String?\n  createdAt             DateTime               @default(now())\n  updatedAt             DateTime\n  driver_authorizations DriverAuthorizations[]\n  users                 Users?                 @relation(fields: [userId], references: [id])\n  vehicle_trips         VehicleTrips[]\n\n  @@map(\"vehicle_drivers\")\n}\n\nmodel VehicleExpenses {\n  id                   String        @id\n  vehicleId            String\n  tripId               String?\n  businessId           String?\n  expenseType          ExpenseType\n  expenseCategory      String?\n  amount               Decimal       @db.Decimal(10, 2)\n  currency             String        @default(\"USD\")\n  expenseDate          DateTime\n  isBusinessDeductible Boolean       @default(false)\n  receiptUrl           String?\n  vendorName           String?\n  description          String?\n  mileageAtExpense     Int?\n  fuelQuantity         Decimal?      @db.Decimal(8, 2)\n  fuelType             FuelType?\n  createdBy            String\n  createdAt            DateTime      @default(now())\n  updatedAt            DateTime\n  businesses           Businesses?   @relation(fields: [businessId], references: [id])\n  users                Users         @relation(fields: [createdBy], references: [id])\n  vehicle_trips        VehicleTrips? @relation(fields: [tripId], references: [id])\n  vehicles             Vehicles      @relation(fields: [vehicleId], references: [id], onDelete: Cascade)\n\n  @@map(\"vehicle_expenses\")\n}\n\nmodel VehicleLicenses {\n  id               String      @id\n  vehicleId        String\n  licenseType      LicenseType\n  licenseNumber    String\n  issuingAuthority String?\n  issueDate        DateTime\n  expiryDate       DateTime\n  renewalCost      Decimal?    @db.Decimal(10, 2)\n  isActive         Boolean     @default(true)\n  documentUrl      String?\n  reminderDays     Int         @default(30)\n  createdAt        DateTime    @default(now())\n  updatedAt        DateTime\n  vehicles         Vehicles    @relation(fields: [vehicleId], references: [id], onDelete: Cascade)\n\n  @@map(\"vehicle_licenses\")\n}\n\nmodel VehicleMaintenanceRecords {\n  id                           String                       @id\n  vehicleId                    String\n  serviceType                  ServiceType\n  serviceCategory              String?\n  serviceName                  String\n  serviceDate                  DateTime\n  mileageAtService             Int\n  nextServiceDue               DateTime?\n  nextServiceMileage           Int?\n  serviceCost                  Decimal                      @db.Decimal(10, 2)\n  serviceProvider              String?\n  serviceLocation              String?\n  partsReplaced                Json?\n  warrantyInfo                 String?\n  receiptUrl                   String?\n  notes                        String?\n  isScheduledService           Boolean                      @default(false)\n  createdBy                    String\n  createdAt                    DateTime                     @default(now())\n  updatedAt                    DateTime\n  users                        Users                        @relation(fields: [createdBy], references: [id])\n  vehicles                     Vehicles                     @relation(fields: [vehicleId], references: [id], onDelete: Cascade)\n  vehicle_maintenance_services VehicleMaintenanceServices[]\n\n  @@map(\"vehicle_maintenance_records\")\n}\n\nmodel VehicleMaintenanceServiceExpenses {\n  id                           String                     @id\n  serviceId                    String\n  expenseType                  String\n  amount                       Decimal                    @db.Decimal(10, 2)\n  currency                     String                     @default(\"USD\")\n  description                  String?\n  vendorName                   String?\n  isBusinessDeductible         Boolean                    @default(false)\n  receiptUrl                   String?\n  createdAt                    DateTime                   @default(now())\n  updatedAt                    DateTime\n  vehicle_maintenance_services VehicleMaintenanceServices @relation(fields: [serviceId], references: [id], onDelete: Cascade)\n\n  @@map(\"vehicle_maintenance_service_expenses\")\n}\n\nmodel VehicleMaintenanceServices {\n  id                                   String                              @id\n  maintenanceRecordId                  String\n  serviceName                          String\n  serviceType                          String\n  cost                                 Decimal                             @db.Decimal(10, 2)\n  currency                             String                              @default(\"USD\")\n  serviceProvider                      String?\n  description                          String?\n  isScheduledService                   Boolean                             @default(false)\n  warrantyUntil                        String?\n  receiptUrl                           String?\n  createdAt                            DateTime                            @default(now())\n  updatedAt                            DateTime\n  vehicle_maintenance_service_expenses VehicleMaintenanceServiceExpenses[]\n  vehicle_maintenance_records          VehicleMaintenanceRecords           @relation(fields: [maintenanceRecordId], references: [id], onDelete: Cascade)\n\n  @@map(\"vehicle_maintenance_services\")\n}\n\nmodel VehicleReimbursements {\n  id                                             String              @id\n  userId                                         String\n  vehicleId                                      String\n  businessId                                     String\n  reimbursementPeriod                            String\n  totalMileage                                   Int\n  businessMileage                                Int\n  personalMileage                                Int\n  statutoryRate                                  Decimal             @db.Decimal(8, 4)\n  totalAmount                                    Decimal             @db.Decimal(10, 2)\n  status                                         ReimbursementStatus @default(PENDING)\n  submissionDate                                 DateTime\n  approvalDate                                   DateTime?\n  paymentDate                                    DateTime?\n  approvedBy                                     String?\n  notes                                          String?\n  createdAt                                      DateTime            @default(now())\n  updatedAt                                      DateTime\n  users_vehicle_reimbursements_approvedByTousers Users?              @relation(\"vehicle_reimbursements_approvedByTousers\", fields: [approvedBy], references: [id])\n  businesses                                     Businesses          @relation(fields: [businessId], references: [id])\n  users_vehicle_reimbursements_userIdTousers     Users               @relation(\"vehicle_reimbursements_userIdTousers\", fields: [userId], references: [id])\n  vehicles                                       Vehicles            @relation(fields: [vehicleId], references: [id])\n\n  @@map(\"vehicle_reimbursements\")\n}\n\nmodel VehicleTrips {\n  id                    String               @id\n  vehicleId             String\n  driverId              String\n  businessId            String?\n  startMileage          Int\n  endMileage            Int?\n  tripMileage           Int                  @default(0)\n  tripPurpose           String\n  tripType              TripType\n  startLocation         String?\n  endLocation           String?\n  startTime             DateTime\n  endTime               DateTime?\n  isCompleted           Boolean              @default(false)\n  notes                 String?\n  gpsTrackingData       Json?\n  createdAt             DateTime             @default(now())\n  updatedAt             DateTime\n  vehicle_expenses      VehicleExpenses[]\n  businesses            Businesses?          @relation(fields: [businessId], references: [id])\n  vehicle_drivers       VehicleDrivers       @relation(fields: [driverId], references: [id], onDelete: Cascade)\n  driver_authorizations DriverAuthorizations @relation(fields: [driverId, vehicleId], references: [driverId, vehicleId])\n  vehicles              Vehicles             @relation(fields: [vehicleId], references: [id], onDelete: Cascade)\n\n  @@map(\"vehicle_trips\")\n}\n\nmodel Vehicles {\n  id                          String                      @id\n  licensePlate                String                      @unique\n  vin                         String                      @unique\n  make                        String\n  model                       String\n  year                        Int\n  color                       String?\n  weight                      Decimal?                    @db.Decimal(10, 2)\n  driveType                   DriveType\n  ownershipType               OwnershipType\n  currentMileage              Int\n  businessId                  String?\n  userId                      String?\n  isActive                    Boolean                     @default(true)\n  purchaseDate                DateTime?\n  purchasePrice               Decimal?                    @db.Decimal(12, 2)\n  notes                       String?\n  createdAt                   DateTime                    @default(now())\n  updatedAt                   DateTime\n  hasInitialMileage           Boolean                     @default(false)\n  mileageUnit                 String                      @default(\"km\")\n  driver_authorizations       DriverAuthorizations[]\n  vehicle_expenses            VehicleExpenses[]\n  vehicle_licenses            VehicleLicenses[]\n  vehicle_maintenance_records VehicleMaintenanceRecords[]\n  vehicle_reimbursements      VehicleReimbursements[]\n  vehicle_trips               VehicleTrips[]\n  businesses                  Businesses?                 @relation(fields: [businessId], references: [id])\n  users                       Users?                      @relation(fields: [userId], references: [id])\n\n  @@map(\"vehicles\")\n}\n\nenum AttributeDataType {\n  TEXT\n  NUMBER\n  BOOLEAN\n  DATE\n  LIST\n  JSON\n}\n\nenum AuthorizationLevel {\n  BASIC\n  ADVANCED\n  EMERGENCY\n}\n\nenum ConflictType {\n  UPDATE_UPDATE\n  UPDATE_DELETE\n  DELETE_UPDATE\n  VECTOR_CLOCK\n  TIMESTAMP\n}\n\nenum CustomerType {\n  INDIVIDUAL\n  BUSINESS\n  CONTRACTOR\n  WHOLESALE\n  VIP\n}\n\nenum DriveType {\n  LEFT_HAND\n  RIGHT_HAND\n}\n\nenum ExpenseType {\n  FUEL\n  TOLL\n  PARKING\n  MAINTENANCE\n  INSURANCE\n  OTHER\n}\n\nenum FuelType {\n  GASOLINE\n  DIESEL\n  ELECTRIC\n  HYBRID\n}\n\nenum ImageSize {\n  THUMBNAIL\n  SMALL\n  MEDIUM\n  LARGE\n  ORIGINAL\n}\n\nenum LicenseType {\n  REGISTRATION\n  RADIO\n  ROAD_USE\n  INSURANCE\n  INSPECTION\n}\n\nenum OrderStatus {\n  PENDING\n  CONFIRMED\n  PROCESSING\n  READY\n  COMPLETED\n  CANCELLED\n  REFUNDED\n}\n\nenum OrderType {\n  SALE\n  RETURN\n  EXCHANGE\n  SERVICE\n  KITCHEN_TICKET\n  RENTAL\n  SUBSCRIPTION\n}\n\nenum OwnershipType {\n  PERSONAL\n  BUSINESS\n}\n\nenum PaymentMethod {\n  CASH\n  CARD\n  MOBILE_MONEY\n  BANK_TRANSFER\n  STORE_CREDIT\n  LAYAWAY\n  NET_30\n  CHECK\n}\n\nenum PaymentStatus {\n  PENDING\n  PAID\n  PARTIALLY_PAID\n  OVERDUE\n  REFUNDED\n  FAILED\n}\n\nenum ProductCondition {\n  NEW\n  USED\n  REFURBISHED\n  DAMAGED\n  EXPIRED\n}\n\nenum ProductType {\n  PHYSICAL\n  DIGITAL\n  SERVICE\n  COMBO\n}\n\nenum PromotionType {\n  PERCENTAGE\n  FIXED_AMOUNT\n  BUY_ONE_GET_ONE\n  COMBO_DEAL\n  HAPPY_HOUR\n  CATEGORY_DISCOUNT\n}\n\nenum ReimbursementStatus {\n  PENDING\n  APPROVED\n  PAID\n  REJECTED\n}\n\nenum ResolutionStrategy {\n  LATEST_TIMESTAMP\n  HIGHEST_PRIORITY\n  MANUAL_RESOLUTION\n  SOURCE_WINS\n  TARGET_WINS\n  MERGE_FIELDS\n  LAST_WRITER_WINS\n  NODE_PRIORITY\n  MERGE_CHANGES\n  BUSINESS_RULE\n  KEEP_BOTH\n}\n\nenum ServiceType {\n  OIL_CHANGE\n  TIRE_REPLACEMENT\n  BRAKE_SERVICE\n  INSPECTION\n  REPAIR\n  OTHER\n}\n\nenum StockMovementType {\n  PURCHASE_RECEIVED\n  SALE\n  RETURN_IN\n  RETURN_OUT\n  ADJUSTMENT\n  TRANSFER_IN\n  TRANSFER_OUT\n  DAMAGE\n  THEFT\n  EXPIRED\n  PRODUCTION_IN\n  PRODUCTION_OUT\n}\n\nenum SyncOperation {\n  CREATE\n  UPDATE\n  DELETE\n  TRUNCATE\n}\n\nenum TripType {\n  BUSINESS\n  PERSONAL\n  MIXED\n}\n",
  "hash": "d83bed14d4935819bcf4f34abfcabfa3313c703700270b3b616f96207a756928",
  "timestamp": "2025-10-15T17:29:22.544Z"
}